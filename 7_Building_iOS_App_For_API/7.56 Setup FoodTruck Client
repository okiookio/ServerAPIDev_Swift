7.56 SETUP FOODTRUCK CLIENT

Create a new xcode project named FoodTruckClient. Its root directory should be level with FoodTruckAPIs Root directory.

CREATE A PODFILE AND INSTALL DEPENDENCIES FOR SWIFTY JSON AND ALAMOFIRE

Tims-Macbook-Pro-2:FoodTruck timbeals$ cd FoodTruckClient/
Tims-Macbook-Pro-2:FoodTruckClient timbeals$ pod init

Tims-Macbook-Pro-2:FoodTruckClient timbeals$ nano podfile
(add Alamofire and SwiftyJSON)

Tims-Macbook-Pro-2:FoodTruckClient timbeals$ pod install

OPEN THE PROJECT WORKSPACE AND ADD FOODTRUCKAPI PROJECT.
Remember that when you do a pod install you are then required to use a workspace instead of a project file.

File > Add files to... > (select FoodTruckAPI.xcodeproj)


7.57 ORGANIZING CONSTANTS

So that you can test your client with a listening server locally, you can spin it up with your docker-compose.

Tims-Macbook-Pro-2:FoodTruckAPI timbeals$ docker-compose up

Next, you need to ensure that you can communicate with your local server while you are developing. The default for a project is to disallow insecure network calls (not https), so you need to go into your info.plist and change the default.

AppTransport Security Settings (toggle down the arrow and add this key value pair)
Allow Arbitrary loads => true



